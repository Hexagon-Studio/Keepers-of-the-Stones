
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package power.keepeersofthestones.init;

import power.keepeersofthestones.item.WoodenShieldItem;
import power.keepeersofthestones.item.WindItem;
import power.keepeersofthestones.item.WhirlpoolItem;
import power.keepeersofthestones.item.WaterStoneItem;
import power.keepeersofthestones.item.WaterKatanaItem;
import power.keepeersofthestones.item.WaterItem;
import power.keepeersofthestones.item.WaterFlowItem;
import power.keepeersofthestones.item.WaterDropItem;
import power.keepeersofthestones.item.WaterBatteryItem;
import power.keepeersofthestones.item.VampirismItem;
import power.keepeersofthestones.item.VacuumWebItem;
import power.keepeersofthestones.item.VacuumSwordItem;
import power.keepeersofthestones.item.VacuumStoneItem;
import power.keepeersofthestones.item.VacuumSpiralItem;
import power.keepeersofthestones.item.VacuumItem;
import power.keepeersofthestones.item.VacuumBatteryItem;
import power.keepeersofthestones.item.TornadoStoneItem;
import power.keepeersofthestones.item.TornadoItem;
import power.keepeersofthestones.item.TornadoCreateItem;
import power.keepeersofthestones.item.TornadoBattleAxeItem;
import power.keepeersofthestones.item.TornadoBatteryItem;
import power.keepeersofthestones.item.TimeStopItem;
import power.keepeersofthestones.item.TimeStoneItem;
import power.keepeersofthestones.item.TimeReversedItem;
import power.keepeersofthestones.item.TimeItem;
import power.keepeersofthestones.item.TimeDilationItem;
import power.keepeersofthestones.item.TimeBladeItem;
import power.keepeersofthestones.item.TimeBatteryItem;
import power.keepeersofthestones.item.TigerClawItem;
import power.keepeersofthestones.item.TeleportationStoneItem;
import power.keepeersofthestones.item.TeleportationItem;
import power.keepeersofthestones.item.TeleportationBatteryItem;
import power.keepeersofthestones.item.TechnologyStoneItem;
import power.keepeersofthestones.item.TechnologyItem;
import power.keepeersofthestones.item.TechnologyBatteryItem;
import power.keepeersofthestones.item.TechnobarrierItem;
import power.keepeersofthestones.item.TechnoPickaxeItem;
import power.keepeersofthestones.item.TamerItem;
import power.keepeersofthestones.item.SunStoneItem;
import power.keepeersofthestones.item.SunRegenerationItem;
import power.keepeersofthestones.item.SunRayItem;
import power.keepeersofthestones.item.SunItem;
import power.keepeersofthestones.item.SunExplodeItem;
import power.keepeersofthestones.item.SunBatteryItem;
import power.keepeersofthestones.item.SunAxeItem;
import power.keepeersofthestones.item.StormItem;
import power.keepeersofthestones.item.SpiritStoneItem;
import power.keepeersofthestones.item.SpikeItem;
import power.keepeersofthestones.item.SpeedStoneItem;
import power.keepeersofthestones.item.SpawnItem;
import power.keepeersofthestones.item.SpaceStoneItem;
import power.keepeersofthestones.item.SpaceItem;
import power.keepeersofthestones.item.SpaceBatteryItem;
import power.keepeersofthestones.item.SpaceAtlasItem;
import power.keepeersofthestones.item.SoundSwordItem;
import power.keepeersofthestones.item.SoundStoneItem;
import power.keepeersofthestones.item.SoundItem;
import power.keepeersofthestones.item.SoundEmitateItem;
import power.keepeersofthestones.item.SoundBatteryItem;
import power.keepeersofthestones.item.SoundBarrierItem;
import power.keepeersofthestones.item.SnowGolemCreatorItem;
import power.keepeersofthestones.item.SmokeStoneItem;
import power.keepeersofthestones.item.ShurikenItem;
import power.keepeersofthestones.item.ShieldOfEarthItem;
import power.keepeersofthestones.item.ShadowarmorItem;
import power.keepeersofthestones.item.ShadowSwordItem;
import power.keepeersofthestones.item.ShadowStoneItem;
import power.keepeersofthestones.item.ShadowInvisibleItem;
import power.keepeersofthestones.item.ShadowBatteryItem;
import power.keepeersofthestones.item.ShadowBallItem;
import power.keepeersofthestones.item.SandStoneItem;
import power.keepeersofthestones.item.SaiItem;
import power.keepeersofthestones.item.RoseSwordItem;
import power.keepeersofthestones.item.RedstoneBundleItem;
import power.keepeersofthestones.item.RandomItemItem;
import power.keepeersofthestones.item.RainfallItem;
import power.keepeersofthestones.item.RainStoneItem;
import power.keepeersofthestones.item.RainKnifeItem;
import power.keepeersofthestones.item.RainItem;
import power.keepeersofthestones.item.RainBowItem;
import power.keepeersofthestones.item.RainBatteryItem;
import power.keepeersofthestones.item.PortalBlastItem;
import power.keepeersofthestones.item.PoisonStoneItem;
import power.keepeersofthestones.item.PointItem;
import power.keepeersofthestones.item.PlasmaBallItem;
import power.keepeersofthestones.item.PlagueStoneItem;
import power.keepeersofthestones.item.PieceOfEarthItem;
import power.keepeersofthestones.item.OceanSwordItem;
import power.keepeersofthestones.item.OceanStoneItem;
import power.keepeersofthestones.item.OceanItem;
import power.keepeersofthestones.item.OceanBatteryItem;
import power.keepeersofthestones.item.ObscurityItem;
import power.keepeersofthestones.item.OblivionItem;
import power.keepeersofthestones.item.MushroomsStoneItem;
import power.keepeersofthestones.item.MoonWitherItem;
import power.keepeersofthestones.item.MoonStonesItem;
import power.keepeersofthestones.item.MoonStoneItem;
import power.keepeersofthestones.item.MoonBatteryItem;
import power.keepeersofthestones.item.MoonAxeItem;
import power.keepeersofthestones.item.MistyFanItem;
import power.keepeersofthestones.item.MistStoneItem;
import power.keepeersofthestones.item.MistItem;
import power.keepeersofthestones.item.MistBatteryItem;
import power.keepeersofthestones.item.MetalStoneItem;
import power.keepeersofthestones.item.MetalItem;
import power.keepeersofthestones.item.MetalInvulnerabilityItem;
import power.keepeersofthestones.item.MetalBatteryItem;
import power.keepeersofthestones.item.MercuryStoneItem;
import power.keepeersofthestones.item.MegawattItem;
import power.keepeersofthestones.item.MagnetStoneItem;
import power.keepeersofthestones.item.MagnetItem;
import power.keepeersofthestones.item.MagmaShieldItem;
import power.keepeersofthestones.item.MagicFireballItem;
import power.keepeersofthestones.item.MaceItem;
import power.keepeersofthestones.item.LightningStrikeItem;
import power.keepeersofthestones.item.LightningStoneItem;
import power.keepeersofthestones.item.LightningItem;
import power.keepeersofthestones.item.LightningBatteryItem;
import power.keepeersofthestones.item.LightingItem;
import power.keepeersofthestones.item.LightSwordItem;
import power.keepeersofthestones.item.LightStoneItem;
import power.keepeersofthestones.item.LightItem;
import power.keepeersofthestones.item.LightBatteryItem;
import power.keepeersofthestones.item.LavaStoneItem;
import power.keepeersofthestones.item.LavaItem;
import power.keepeersofthestones.item.LavaHoleItem;
import power.keepeersofthestones.item.LavaHammerItem;
import power.keepeersofthestones.item.LavaBatteryItem;
import power.keepeersofthestones.item.LavaBallItem;
import power.keepeersofthestones.item.KunaiItem;
import power.keepeersofthestones.item.IronShieldItem;
import power.keepeersofthestones.item.IronGolemCreateItem;
import power.keepeersofthestones.item.IncreasePowerItem;
import power.keepeersofthestones.item.IceStoneItem;
import power.keepeersofthestones.item.IceSpearItem;
import power.keepeersofthestones.item.IceShieldItem;
import power.keepeersofthestones.item.IceSharpItem;
import power.keepeersofthestones.item.IceItem;
import power.keepeersofthestones.item.IceBatteryItem;
import power.keepeersofthestones.item.IceBallItem;
import power.keepeersofthestones.item.GreeneryStoneItem;
import power.keepeersofthestones.item.GreeneryItem;
import power.keepeersofthestones.item.GreeneryBatteryItem;
import power.keepeersofthestones.item.GravityStoneItem;
import power.keepeersofthestones.item.GoldenDustStoneItem;
import power.keepeersofthestones.item.GoldenCrossbowItem;
import power.keepeersofthestones.item.GlowCreateItem;
import power.keepeersofthestones.item.GalacticSwordItem;
import power.keepeersofthestones.item.ForcereplicationItem;
import power.keepeersofthestones.item.FlashLightItem;
import power.keepeersofthestones.item.FistofEarthItem;
import power.keepeersofthestones.item.FireSwordItem;
import power.keepeersofthestones.item.FireStoneItem;
import power.keepeersofthestones.item.FireItem;
import power.keepeersofthestones.item.FireBatteryItem;
import power.keepeersofthestones.item.FertilizerItem;
import power.keepeersofthestones.item.ExplosiveFlowItem;
import power.keepeersofthestones.item.ExplosionStoneItem;
import power.keepeersofthestones.item.ExplosionBatteryItem;
import power.keepeersofthestones.item.ExplodeItem;
import power.keepeersofthestones.item.EnergyStoneItem;
import power.keepeersofthestones.item.EnergyStaffItem;
import power.keepeersofthestones.item.EnergySphereItem;
import power.keepeersofthestones.item.EnergyShieldItem;
import power.keepeersofthestones.item.EnergyItem;
import power.keepeersofthestones.item.EnergyBatteryItem;
import power.keepeersofthestones.item.EnergyAbsorptionItem;
import power.keepeersofthestones.item.EmptyBatteryItem;
import power.keepeersofthestones.item.ElementalMusicDiscItem;
import power.keepeersofthestones.item.ElementalCoinItem;
import power.keepeersofthestones.item.EclipseItem;
import power.keepeersofthestones.item.EarthStoneItem;
import power.keepeersofthestones.item.EarthItem;
import power.keepeersofthestones.item.EarthBatteryItem;
import power.keepeersofthestones.item.DinoeraItem;
import power.keepeersofthestones.item.DestructionStoneItem;
import power.keepeersofthestones.item.DestructionSphereItem;
import power.keepeersofthestones.item.DestructionPowerItem;
import power.keepeersofthestones.item.DestructionItem;
import power.keepeersofthestones.item.DamagedWaterStoneItem;
import power.keepeersofthestones.item.DamagedVacuumStoneItem;
import power.keepeersofthestones.item.DamagedTornadoStoneItem;
import power.keepeersofthestones.item.DamagedTimeStoneItem;
import power.keepeersofthestones.item.DamagedTeleportationStoneItem;
import power.keepeersofthestones.item.DamagedTechnologyStoneItem;
import power.keepeersofthestones.item.DamagedSunStoneItem;
import power.keepeersofthestones.item.DamagedSpaceStoneItem;
import power.keepeersofthestones.item.DamagedSoundStoneItem;
import power.keepeersofthestones.item.DamagedShadowStoneItem;
import power.keepeersofthestones.item.DamagedRainStoneItem;
import power.keepeersofthestones.item.DamagedOceanStoneItem;
import power.keepeersofthestones.item.DamagedMoonStoneItem;
import power.keepeersofthestones.item.DamagedMistStoneItem;
import power.keepeersofthestones.item.DamagedMetalStoneItem;
import power.keepeersofthestones.item.DamagedLightningStoneItem;
import power.keepeersofthestones.item.DamagedLightStoneItem;
import power.keepeersofthestones.item.DamagedLavaStoneItem;
import power.keepeersofthestones.item.DamagedIceStoneItem;
import power.keepeersofthestones.item.DamagedGreeneryStoneItem;
import power.keepeersofthestones.item.DamagedFireStoneItem;
import power.keepeersofthestones.item.DamagedExplosionStoneItem;
import power.keepeersofthestones.item.DamagedEnergyStoneItem;
import power.keepeersofthestones.item.DamagedEarthStoneItem;
import power.keepeersofthestones.item.DamagedDestructionStoneItem;
import power.keepeersofthestones.item.DamagedCrystalStoneItem;
import power.keepeersofthestones.item.DamagedCreationStoneItem;
import power.keepeersofthestones.item.DamagedBloodStoneItem;
import power.keepeersofthestones.item.DamagedAnimalsStoneItem;
import power.keepeersofthestones.item.DamagedAmberStoneItem;
import power.keepeersofthestones.item.DamagedAirStoneItem;
import power.keepeersofthestones.item.CutterSwordItem;
import power.keepeersofthestones.item.CultivationItem;
import power.keepeersofthestones.item.CrystallizedItem;
import power.keepeersofthestones.item.CrystalStoneItem;
import power.keepeersofthestones.item.CrystalShieldItem;
import power.keepeersofthestones.item.CrystalItem;
import power.keepeersofthestones.item.CrystalDaggerItem;
import power.keepeersofthestones.item.CrystalBatteryItem;
import power.keepeersofthestones.item.CrestcentItem;
import power.keepeersofthestones.item.CreationStoneItem;
import power.keepeersofthestones.item.CreationItem;
import power.keepeersofthestones.item.CreateShadowItem;
import power.keepeersofthestones.item.CoralShieldItem;
import power.keepeersofthestones.item.ConstructionsItem;
import power.keepeersofthestones.item.ClusterSharpItem;
import power.keepeersofthestones.item.BurnItem;
import power.keepeersofthestones.item.BookOfElementsItem;
import power.keepeersofthestones.item.BoStaffItem;
import power.keepeersofthestones.item.BlueKnifeItem;
import power.keepeersofthestones.item.BloodStoneItem;
import power.keepeersofthestones.item.BloodReaperItem;
import power.keepeersofthestones.item.BloodItem;
import power.keepeersofthestones.item.BloodBatteryItem;
import power.keepeersofthestones.item.BlackHoleItem;
import power.keepeersofthestones.item.BlackHeartItem;
import power.keepeersofthestones.item.BeeStingItem;
import power.keepeersofthestones.item.AnimalsStoneItem;
import power.keepeersofthestones.item.AnimalsItem;
import power.keepeersofthestones.item.AnimalsBatteryItem;
import power.keepeersofthestones.item.AmberStreaksItem;
import power.keepeersofthestones.item.AmberStoneItem;
import power.keepeersofthestones.item.AmberShieldItem;
import power.keepeersofthestones.item.AmberItem;
import power.keepeersofthestones.item.AirStoneItem;
import power.keepeersofthestones.item.AirFlowItem;
import power.keepeersofthestones.item.AirBladeItem;
import power.keepeersofthestones.item.AirBatteryItem;
import power.keepeersofthestones.item.AetherStoneItem;
import power.keepeersofthestones.item.AcusticalExplodeItem;
import power.keepeersofthestones.item.AccelerationTimeItem;

import org.lwjgl.system.windows.POINT;

import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.event.RegistryEvent;

import net.minecraft.world.level.block.Block;
import net.minecraft.world.item.SpawnEggItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.BlockItem;

import java.util.List;
import java.util.ArrayList;

@Mod.EventBusSubscriber(bus = Mod.EventBusSubscriber.Bus.MOD)
public class PowerModItems {
	private static final List<Item> REGISTRY = new ArrayList<>();
	public static final Item FIRE_STONE = register(new FireStoneItem());
	public static final Item AIR_STONE = register(new AirStoneItem());
	public static final Item WATER_STONE = register(new WaterStoneItem());
	public static final Item EARTH_STONE = register(new EarthStoneItem());
	public static final Item GREENERY_STONE = register(new GreeneryStoneItem());
	public static final Item ANIMALS_STONE = register(new AnimalsStoneItem());
	public static final Item TECHNOLOGY_STONE = register(new TechnologyStoneItem());
	public static final Item METAL_STONE = register(new MetalStoneItem());
	public static final Item LIGHT_STONE = register(new LightStoneItem());
	public static final Item SHADOW_STONE = register(new ShadowStoneItem());
	public static final Item ENERGY_STONE = register(new EnergyStoneItem());
	public static final Item VACUUM_STONE = register(new VacuumStoneItem());
	public static final Item ICE_STONE = register(new IceStoneItem());
	public static final Item LIGHTNING_STONE = register(new LightningStoneItem());
	public static final Item SOUND_STONE = register(new SoundStoneItem());
	public static final Item CRYSTAL_STONE = register(new CrystalStoneItem());
	public static final Item LAVA_STONE = register(new LavaStoneItem());
	public static final Item RAIN_STONE = register(new RainStoneItem());
	public static final Item TORNADO_STONE = register(new TornadoStoneItem());
	public static final Item OCEAN_STONE = register(new OceanStoneItem());
	public static final Item BLOOD_STONE = register(new BloodStoneItem());
	public static final Item TELEPORTATION_STONE = register(new TeleportationStoneItem());
	public static final Item EXPLOSION_STONE = register(new ExplosionStoneItem());
	public static final Item AMBER_STONE = register(new AmberStoneItem());
	public static final Item MIST_STONE = register(new MistStoneItem());
	public static final Item SUN_STONE = register(new SunStoneItem());
	public static final Item MOON_STONE = register(new MoonStoneItem());
	public static final Item SPACE_STONE = register(new SpaceStoneItem());
	public static final Item TIME_STONE = register(new TimeStoneItem());
	public static final Item CREATION_STONE = register(new CreationStoneItem());
	public static final Item DESTRUCTION_STONE = register(new DestructionStoneItem());
	public static final Item ELEMENTAL_MUSIC_DISC = register(new ElementalMusicDiscItem());
	public static final Item BATTERY_CHARGER = register(PowerModBlocks.BATTERY_CHARGER, PowerModTabs.TAB_TECHNOLOGIES_AND_ARTIFACTS);
	public static final Item BOOK_OF_ELEMENTS = register(new BookOfElementsItem());
	public static final Item ELEMENTAL_COIN = register(new ElementalCoinItem());
	public static final Item TYRANNOSAURUS_REX = register(new SpawnEggItem(PowerModEntities.TYRANNOSAURUS_REX, -6750208, -65536,
			new Item.Properties().tab(PowerModTabs.TAB_TECHNOLOGIES_AND_ARTIFACTS)).setRegistryName("tyrannosaurus_rex_spawn_egg"));
	public static final Item DINOERA = register(new DinoeraItem());
	public static final Item CRYSTALLIZED = register(new CrystallizedItem());
	public static final Item OBLIVION = register(new OblivionItem());
	public static final Item EMPTY_BATTERY = register(new EmptyBatteryItem());
	public static final Item FIRE_BATTERY = register(new FireBatteryItem());
	public static final Item AIR_BATTERY = register(new AirBatteryItem());
	public static final Item WATER_BATTERY = register(new WaterBatteryItem());
	public static final Item EARTH_BATTERY = register(new EarthBatteryItem());
	public static final Item ENERGY_BATTERY = register(new EnergyBatteryItem());
	public static final Item ICE_BATTERY = register(new IceBatteryItem());
	public static final Item LIGHTNING_BATTERY = register(new LightningBatteryItem());
	public static final Item SOUND_BATTERY = register(new SoundBatteryItem());
	public static final Item CRYSTAL_BATTERY = register(new CrystalBatteryItem());
	public static final Item LAVA_BATTERY = register(new LavaBatteryItem());
	public static final Item RAIN_BATTERY = register(new RainBatteryItem());
	public static final Item TORNADO_BATTERY = register(new TornadoBatteryItem());
	public static final Item OCEAN_BATTERY = register(new OceanBatteryItem());
	public static final Item GREENERY_BATTERY = register(new GreeneryBatteryItem());
	public static final Item ANIMALS_BATTERY = register(new AnimalsBatteryItem());
	public static final Item METAL_BATTERY = register(new MetalBatteryItem());
	public static final Item LIGHT_BATTERY = register(new LightBatteryItem());
	public static final Item SHADOW_BATTERY = register(new ShadowBatteryItem());
	public static final Item VACUUM_BATTERY = register(new VacuumBatteryItem());
	public static final Item SUN_BATTERY = register(new SunBatteryItem());
	public static final Item MOON_BATTERY = register(new MoonBatteryItem());
	public static final Item SPACE_BATTERY = register(new SpaceBatteryItem());
	public static final Item BLOOD_BATTERY = register(new BloodBatteryItem());
	public static final Item TIME_BATTERY = register(new TimeBatteryItem());
	public static final Item TECHNOLOGY_BATTERY = register(new TechnologyBatteryItem());
	public static final Item TELEPORTATION_BATTERY = register(new TeleportationBatteryItem());
	public static final Item EXPLOSION_BATTERY = register(new ExplosionBatteryItem());
	public static final Item MIST_BATTERY = register(new MistBatteryItem());
	public static final Item WOOD_MAGIC_BOX = register(PowerModBlocks.WOOD_MAGIC_BOX, PowerModTabs.TAB_MAGIC_BOXES);
	public static final Item STONE_MAGIC_BOX = register(PowerModBlocks.STONE_MAGIC_BOX, PowerModTabs.TAB_MAGIC_BOXES);
	public static final Item IRON_MAGIC_BOX = register(PowerModBlocks.IRON_MAGIC_BOX, PowerModTabs.TAB_MAGIC_BOXES);
	public static final Item GOLD_MAGIC_BOX = register(PowerModBlocks.GOLD_MAGIC_BOX, PowerModTabs.TAB_MAGIC_BOXES);
	public static final Item DAMAGED_FIRE_STONE = register(new DamagedFireStoneItem());
	public static final Item DAMAGED_AIR_STONE = register(new DamagedAirStoneItem());
	public static final Item DAMAGED_WATER_STONE = register(new DamagedWaterStoneItem());
	public static final Item DAMAGED_EARTH_STONE = register(new DamagedEarthStoneItem());
	public static final Item DAMAGED_ENERGY_STONE = register(new DamagedEnergyStoneItem());
	public static final Item DAMAGED_ICE_STONE = register(new DamagedIceStoneItem());
	public static final Item DAMAGED_LIGHTNING_STONE = register(new DamagedLightningStoneItem());
	public static final Item DAMAGED_SOUND_STONE = register(new DamagedSoundStoneItem());
	public static final Item DAMAGED_CRYSTAL_STONE = register(new DamagedCrystalStoneItem());
	public static final Item DAMAGED_LAVA_STONE = register(new DamagedLavaStoneItem());
	public static final Item DAMAGED_RAIN_STONE = register(new DamagedRainStoneItem());
	public static final Item DAMAGED_TORNADO_STONE = register(new DamagedTornadoStoneItem());
	public static final Item DAMAGED_OCEAN_STONE = register(new DamagedOceanStoneItem());
	public static final Item DAMAGED_GREENERY_STONE = register(new DamagedGreeneryStoneItem());
	public static final Item DAMAGED_ANIMALS_STONE = register(new DamagedAnimalsStoneItem());
	public static final Item DAMAGED_METAL_STONE = register(new DamagedMetalStoneItem());
	public static final Item DAMAGED_LIGHT_STONE = register(new DamagedLightStoneItem());
	public static final Item DAMAGED_SHADOW_STONE = register(new DamagedShadowStoneItem());
	public static final Item DAMAGED_VACUUM_STONE = register(new DamagedVacuumStoneItem());
	public static final Item DAMAGED_SUN_STONE = register(new DamagedSunStoneItem());
	public static final Item DAMAGED_MOON_STONE = register(new DamagedMoonStoneItem());
	public static final Item DAMAGED_SPACE_STONE = register(new DamagedSpaceStoneItem());
	public static final Item DAMAGED_TIME_STONE = register(new DamagedTimeStoneItem());
	public static final Item DAMAGED_CREATION_STONE = register(new DamagedCreationStoneItem());
	public static final Item DAMAGED_DESTRUCTION_STONE = register(new DamagedDestructionStoneItem());
	public static final Item DAMAGED_BLOOD_STONE = register(new DamagedBloodStoneItem());
	public static final Item DAMAGED_TECHNOLOGY_STONE = register(new DamagedTechnologyStoneItem());
	public static final Item DAMAGED_TELEPORTATION_STONE = register(new DamagedTeleportationStoneItem());
	public static final Item DAMAGED_EXPLOSION_STONE = register(new DamagedExplosionStoneItem());
	public static final Item DAMAGED_AMBER_STONE = register(new DamagedAmberStoneItem());
	public static final Item DAMAGED_MIST_STONE = register(new DamagedMistStoneItem());
	public static final Item BURN = register(new BurnItem());
	public static final Item MAGIC_FIREBALL = register(new MagicFireballItem());
	public static final Item AIR_FLOW = register(new AirFlowItem());
	public static final Item WATER_FLOW = register(new WaterFlowItem());
	public static final Item WATER_DROP = register(new WaterDropItem());
	public static final Item FIRE_HELMET = register(new FireItem.Helmet());
	public static final Item FIRE_CHESTPLATE = register(new FireItem.Chestplate());
	public static final Item FIRE_LEGGINGS = register(new FireItem.Leggings());
	public static final Item FIRE_BOOTS = register(new FireItem.Boots());
	public static final Item WATER_HELMET = register(new WaterItem.Helmet());
	public static final Item WATER_CHESTPLATE = register(new WaterItem.Chestplate());
	public static final Item WATER_LEGGINGS = register(new WaterItem.Leggings());
	public static final Item WATER_BOOTS = register(new WaterItem.Boots());
	public static final Item FISTOF_EARTH = register(new FistofEarthItem());
	public static final Item SHIELD_OF_EARTH = register(new ShieldOfEarthItem());
	public static final Item WIND_HELMET = register(new WindItem.Helmet());
	public static final Item WIND_CHESTPLATE = register(new WindItem.Chestplate());
	public static final Item WIND_LEGGINGS = register(new WindItem.Leggings());
	public static final Item WIND_BOOTS = register(new WindItem.Boots());
	public static final Item PIECE_OF_EARTH = register(new PieceOfEarthItem());
	public static final Item EARTH_HELMET = register(new EarthItem.Helmet());
	public static final Item EARTH_CHESTPLATE = register(new EarthItem.Chestplate());
	public static final Item EARTH_LEGGINGS = register(new EarthItem.Leggings());
	public static final Item EARTH_BOOTS = register(new EarthItem.Boots());
	public static final Item ENERGY_HELMET = register(new EnergyItem.Helmet());
	public static final Item ENERGY_CHESTPLATE = register(new EnergyItem.Chestplate());
	public static final Item ENERGY_LEGGINGS = register(new EnergyItem.Leggings());
	public static final Item ENERGY_BOOTS = register(new EnergyItem.Boots());
	public static final Item ENERGY_SPHERE = register(new EnergySphereItem());
	public static final Item ENERGY_BLOCK = register(PowerModBlocks.ENERGY_BLOCK, null);
	public static final Item ENERGY_SHIELD = register(new EnergyShieldItem());
	public static final Item ICE_BALL = register(new IceBallItem());
	public static final Item ICE_SHIELD = register(new IceShieldItem());
	public static final Item SNOW_GOLEM_CREATOR = register(new SnowGolemCreatorItem());
	public static final Item ICE_SHARP = register(new IceSharpItem());
	public static final Item PLASMA_BALL = register(new PlasmaBallItem());
	public static final Item STORM = register(new StormItem());
	public static final Item SOUND_SWORD = register(new SoundSwordItem());
	public static final Item ACUSTICAL_EXPLODE = register(new AcusticalExplodeItem());
	public static final Item SOUND_BARRIER_BLOCK = register(PowerModBlocks.SOUND_BARRIER_BLOCK, null);
	public static final Item SOUND_BARRIER = register(new SoundBarrierItem());
	public static final Item SOUND_EMITATE = register(new SoundEmitateItem());
	public static final Item CLUSTER_SHARP = register(new ClusterSharpItem());
	public static final Item CLUSTER_BLOCK = register(PowerModBlocks.CLUSTER_BLOCK, null);
	public static final Item CRYSTAL_SHIELD_BLOCK = register(PowerModBlocks.CRYSTAL_SHIELD_BLOCK, null);
	public static final Item CRYSTAL_SHIELD = register(new CrystalShieldItem());
	public static final Item LAVA_HOLE = register(new LavaHoleItem());
	public static final Item LAVA_BALL = register(new LavaBallItem());
	public static final Item RAINFALL = register(new RainfallItem());
	public static final Item RAIN_KNIFE = register(new RainKnifeItem());
	public static final Item TORNADO_CREATE = register(new TornadoCreateItem());
	public static final Item CORAL_SHIELD = register(new CoralShieldItem());
	public static final Item WHIRLPOOL = register(new WhirlpoolItem());
	public static final Item OCEAN_SWORD = register(new OceanSwordItem());
	public static final Item ICE_HELMET = register(new IceItem.Helmet());
	public static final Item ICE_CHESTPLATE = register(new IceItem.Chestplate());
	public static final Item ICE_LEGGINGS = register(new IceItem.Leggings());
	public static final Item ICE_BOOTS = register(new IceItem.Boots());
	public static final Item LIGHTNING_HELMET = register(new LightningItem.Helmet());
	public static final Item LIGHTNING_CHESTPLATE = register(new LightningItem.Chestplate());
	public static final Item LIGHTNING_LEGGINGS = register(new LightningItem.Leggings());
	public static final Item LIGHTNING_BOOTS = register(new LightningItem.Boots());
	public static final Item SOUND_HELMET = register(new SoundItem.Helmet());
	public static final Item SOUND_CHESTPLATE = register(new SoundItem.Chestplate());
	public static final Item SOUND_LEGGINGS = register(new SoundItem.Leggings());
	public static final Item SOUND_BOOTS = register(new SoundItem.Boots());
	public static final Item CRYSTAL_HELMET = register(new CrystalItem.Helmet());
	public static final Item CRYSTAL_CHESTPLATE = register(new CrystalItem.Chestplate());
	public static final Item CRYSTAL_LEGGINGS = register(new CrystalItem.Leggings());
	public static final Item CRYSTAL_BOOTS = register(new CrystalItem.Boots());
	public static final Item LAVA_HELMET = register(new LavaItem.Helmet());
	public static final Item LAVA_CHESTPLATE = register(new LavaItem.Chestplate());
	public static final Item LAVA_LEGGINGS = register(new LavaItem.Leggings());
	public static final Item LAVA_BOOTS = register(new LavaItem.Boots());
	public static final Item RAIN_HELMET = register(new RainItem.Helmet());
	public static final Item RAIN_CHESTPLATE = register(new RainItem.Chestplate());
	public static final Item RAIN_LEGGINGS = register(new RainItem.Leggings());
	public static final Item RAIN_BOOTS = register(new RainItem.Boots());
	public static final Item TORNADO_HELMET = register(new TornadoItem.Helmet());
	public static final Item TORNADO_CHESTPLATE = register(new TornadoItem.Chestplate());
	public static final Item TORNADO_LEGGINGS = register(new TornadoItem.Leggings());
	public static final Item TORNADO_BOOTS = register(new TornadoItem.Boots());
	public static final Item OCEAN_HELMET = register(new OceanItem.Helmet());
	public static final Item OCEAN_CHESTPLATE = register(new OceanItem.Chestplate());
	public static final Item OCEAN_LEGGINGS = register(new OceanItem.Leggings());
	public static final Item OCEAN_BOOTS = register(new OceanItem.Boots());
	public static final Item LIGHTNING_STRIKE = register(new LightningStrikeItem());
	public static final Item ENERGY_STAFF = register(new EnergyStaffItem());
	public static final Item FIRE_SWORD = register(new FireSwordItem());
	public static final Item AIR_BLADE = register(new AirBladeItem());
	public static final Item WATER_KATANA = register(new WaterKatanaItem());
	public static final Item CRYSTAL_DAGGER = register(new CrystalDaggerItem());
	public static final Item LAVA_HAMMER = register(new LavaHammerItem());
	public static final Item RAIN_BOW = register(new RainBowItem());
	public static final Item TORNADO_BATTLE_AXE = register(new TornadoBattleAxeItem());
	public static final Item MAGMA_SHIELD = register(new MagmaShieldItem());
	public static final Item ROSE_SWORD = register(new RoseSwordItem());
	public static final Item WOODEN_SHIELD = register(new WoodenShieldItem());
	public static final Item SPIKE = register(new SpikeItem());
	public static final Item FERTILIZER = register(new FertilizerItem());
	public static final Item CULTIVATION = register(new CultivationItem());
	public static final Item BEE_STING = register(new BeeStingItem());
	public static final Item TIGER_CLAW = register(new TigerClawItem());
	public static final Item TAMER = register(new TamerItem());
	public static final Item SPAWN = register(new SpawnItem());
	public static final Item SHURIKEN = register(new ShurikenItem());
	public static final Item SAI = register(new SaiItem());
	public static final Item METAL_INVULNERABILITY = register(new MetalInvulnerabilityItem());
	public static final Item IRON_GOLEM_CREATE = register(new IronGolemCreateItem());
	public static final Item IRON_SHIELD = register(new IronShieldItem());
	public static final Item LIGHT_SWORD = register(new LightSwordItem());
	public static final Item FLASH_LIGHT = register(new FlashLightItem());
	public static final Item GLOW_CREATE = register(new GlowCreateItem());
	public static final Item LIGHTING = register(new LightingItem());
	public static final Item SHADOW_SWORD = register(new ShadowSwordItem());
	public static final Item SHADOW_BALL = register(new ShadowBallItem());
	public static final Item SHADOW_INVISIBLE = register(new ShadowInvisibleItem());
	public static final Item CREATE_SHADOW = register(new CreateShadowItem());
	public static final Item VACUUM_SWORD = register(new VacuumSwordItem());
	public static final Item VACUUM_SPIRAL = register(new VacuumSpiralItem());
	public static final Item VACUUM_WEB_BLOCK = register(PowerModBlocks.VACUUM_WEB_BLOCK, null);
	public static final Item VACUUM_WEB = register(new VacuumWebItem());
	public static final Item SUN_AXE = register(new SunAxeItem());
	public static final Item SUN_EXPLODE = register(new SunExplodeItem());
	public static final Item SUN_RAY = register(new SunRayItem());
	public static final Item SUN_REGENERATION = register(new SunRegenerationItem());
	public static final Item MOON_AXE = register(new MoonAxeItem());
	public static final Item MOON_STONES = register(new MoonStonesItem());
	public static final Item MOON_STONES_BLOCK = register(PowerModBlocks.MOON_STONES_BLOCK, null);
	public static final Item ECLIPSE = register(new EclipseItem());
	public static final Item MOON_WITHER = register(new MoonWitherItem());
	public static final Item RANDOM_ITEM = register(new RandomItemItem());
	public static final Item DESTRUCTION_POWER = register(new DestructionPowerItem());
	public static final Item GALACTIC_SWORD = register(new GalacticSwordItem());
	public static final Item BLACK_HOLE = register(new BlackHoleItem());
	public static final Item BLACK_HOLE_BLOCK = register(PowerModBlocks.BLACK_HOLE_BLOCK, null);
	public static final Item GREENERY_HELMET = register(new GreeneryItem.Helmet());
	public static final Item GREENERY_CHESTPLATE = register(new GreeneryItem.Chestplate());
	public static final Item GREENERY_LEGGINGS = register(new GreeneryItem.Leggings());
	public static final Item GREENERY_BOOTS = register(new GreeneryItem.Boots());
	public static final Item UNMULTIPLICATION_MOON_STONES_BLOCK = register(PowerModBlocks.UNMULTIPLICATION_MOON_STONES_BLOCK, null);
	public static final Item ANIMALS_HELMET = register(new AnimalsItem.Helmet());
	public static final Item ANIMALS_CHESTPLATE = register(new AnimalsItem.Chestplate());
	public static final Item ANIMALS_LEGGINGS = register(new AnimalsItem.Leggings());
	public static final Item ANIMALS_BOOTS = register(new AnimalsItem.Boots());
	public static final Item METAL_HELMET = register(new MetalItem.Helmet());
	public static final Item METAL_CHESTPLATE = register(new MetalItem.Chestplate());
	public static final Item METAL_LEGGINGS = register(new MetalItem.Leggings());
	public static final Item METAL_BOOTS = register(new MetalItem.Boots());
	public static final Item LIGHT_HELMET = register(new LightItem.Helmet());
	public static final Item LIGHT_CHESTPLATE = register(new LightItem.Chestplate());
	public static final Item LIGHT_LEGGINGS = register(new LightItem.Leggings());
	public static final Item LIGHT_BOOTS = register(new LightItem.Boots());
	public static final Item SHADOW_HELMET = register(new ShadowarmorItem.Helmet());
	public static final Item SHADOW_CHESTPLATE = register(new ShadowarmorItem.Chestplate());
	public static final Item SHADOW_LEGGINGS = register(new ShadowarmorItem.Leggings());
	public static final Item SHADOW_BOOTS = register(new ShadowarmorItem.Boots());
	public static final Item CRESTCENT_HELMET = register(new CrestcentItem.Helmet());
	public static final Item CRESTCENT_CHESTPLATE = register(new CrestcentItem.Chestplate());
	public static final Item CRESTCENT_LEGGINGS = register(new CrestcentItem.Leggings());
	public static final Item CRESTCENT_BOOTS = register(new CrestcentItem.Boots());
	public static final Item SUN_HELMET = register(new SunItem.Helmet());
	public static final Item SUN_CHESTPLATE = register(new SunItem.Chestplate());
	public static final Item SUN_LEGGINGS = register(new SunItem.Leggings());
	public static final Item SUN_BOOTS = register(new SunItem.Boots());
	public static final Item VACUUM_HELMET = register(new VacuumItem.Helmet());
	public static final Item VACUUM_CHESTPLATE = register(new VacuumItem.Chestplate());
	public static final Item VACUUM_LEGGINGS = register(new VacuumItem.Leggings());
	public static final Item VACUUM_BOOTS = register(new VacuumItem.Boots());
	public static final Item CREATION_HELMET = register(new CreationItem.Helmet());
	public static final Item CREATION_CHESTPLATE = register(new CreationItem.Chestplate());
	public static final Item CREATION_LEGGINGS = register(new CreationItem.Leggings());
	public static final Item CREATION_BOOTS = register(new CreationItem.Boots());
	public static final Item DESTRUCTION_HELMET = register(new DestructionItem.Helmet());
	public static final Item DESTRUCTION_CHESTPLATE = register(new DestructionItem.Chestplate());
	public static final Item DESTRUCTION_LEGGINGS = register(new DestructionItem.Leggings());
	public static final Item DESTRUCTION_BOOTS = register(new DestructionItem.Boots());
	public static final Item SPACE_HELMET = register(new SpaceItem.Helmet());
	public static final Item SPACE_CHESTPLATE = register(new SpaceItem.Chestplate());
	public static final Item SPACE_LEGGINGS = register(new SpaceItem.Leggings());
	public static final Item SPACE_BOOTS = register(new SpaceItem.Boots());
	public static final Item BLOOD_HELMET = register(new BloodItem.Helmet());
	public static final Item BLOOD_CHESTPLATE = register(new BloodItem.Chestplate());
	public static final Item BLOOD_LEGGINGS = register(new BloodItem.Leggings());
	public static final Item BLOOD_BOOTS = register(new BloodItem.Boots());
	public static final Item VAMPIRISM = register(new VampirismItem());
	public static final Item BLOOD_REAPER = register(new BloodReaperItem());
	public static final Item BLACK_HEART = register(new BlackHeartItem());
	public static final Item TIME_HELMET = register(new TimeItem.Helmet());
	public static final Item TIME_CHESTPLATE = register(new TimeItem.Chestplate());
	public static final Item TIME_LEGGINGS = register(new TimeItem.Leggings());
	public static final Item TIME_BOOTS = register(new TimeItem.Boots());
	public static final Item TIME_BLADE = register(new TimeBladeItem());
	public static final Item ACCELERATION_TIME = register(new AccelerationTimeItem());
	public static final Item TIME_STOP = register(new TimeStopItem());
	public static final Item TIME_REVERSED = register(new TimeReversedItem());
	public static final Item TIME_DILATION = register(new TimeDilationItem());
	public static final Item TECHNOLOGY_HELMET = register(new TechnologyItem.Helmet());
	public static final Item TECHNOLOGY_CHESTPLATE = register(new TechnologyItem.Chestplate());
	public static final Item TECHNOLOGY_LEGGINGS = register(new TechnologyItem.Leggings());
	public static final Item TECHNOLOGY_BOOTS = register(new TechnologyItem.Boots());
	public static final Item TECHNO_PICKAXE = register(new TechnoPickaxeItem());
	public static final Item TECHNOBARRIER_BLOCK = register(PowerModBlocks.TECHNOBARRIER_BLOCK, null);
	public static final Item TECHNOBARRIER = register(new TechnobarrierItem());
	public static final Item MEGAWATT = register(new MegawattItem());
	public static final Item REDSTONE_BUNDLE = register(new RedstoneBundleItem());
	public static final Item TELEPORTATION_HELMET = register(new TeleportationItem.Helmet());
	public static final Item TELEPORTATION_CHESTPLATE = register(new TeleportationItem.Chestplate());
	public static final Item TELEPORTATION_LEGGINGS = register(new TeleportationItem.Leggings());
	public static final Item TELEPORTATION_BOOTS = register(new TeleportationItem.Boots());
	public static final Item BLUE_KNIFE = register(new BlueKnifeItem());
	public static final Item PORTAL_BLAST = register(new PortalBlastItem());
	public static final Item BLUE_PORTAL = register(PowerModBlocks.BLUE_PORTAL, null);
	public static final Item ORANGE_PORTAL = register(PowerModBlocks.ORANGE_PORTAL, null);
	public static final Item EXPLODE_HELMET = register(new ExplodeItem.Helmet());
	public static final Item EXPLODE_CHESTPLATE = register(new ExplodeItem.Chestplate());
	public static final Item EXPLODE_LEGGINGS = register(new ExplodeItem.Leggings());
	public static final Item EXPLODE_BOOTS = register(new ExplodeItem.Boots());
	public static final Item DETONATOR_TNT = register(PowerModBlocks.DETONATOR_TNT, null);
	public static final Item EXPLOSIVE_FLOW = register(new ExplosiveFlowItem());
	public static final Item MACE = register(new MaceItem());
	public static final Item ICE_SPEAR = register(new IceSpearItem());
	public static final Item GOLDEN_CROSSBOW = register(new GoldenCrossbowItem());
	public static final Item DESTRUCTION_SPHERE = register(new DestructionSphereItem());
	public static final Item AMBER_HELMET = register(new AmberItem.Helmet());
	public static final Item AMBER_CHESTPLATE = register(new AmberItem.Chestplate());
	public static final Item AMBER_LEGGINGS = register(new AmberItem.Leggings());
	public static final Item AMBER_BOOTS = register(new AmberItem.Boots());
	public static final Item FORCE_REPLICATION = register(new ForcereplicationItem());
	public static final Item CONSTRUCTIONS = register(new ConstructionsItem());
	public static final Item BO_STAFF = register(new BoStaffItem());
	public static final Item INCREASE_POWER = register(new IncreasePowerItem());
	public static final Item CUTTER_SWORD = register(new CutterSwordItem());
	public static final Item ENERGY_ABSORPTION = register(new EnergyAbsorptionItem());
	public static final Item SMOKE_STONE = register(new SmokeStoneItem());
	public static final Item POISON_STONE = register(new PoisonStoneItem());
	public static final Item PLAGUE_STONE = register(new PlagueStoneItem());
	public static final Item GRAVITY_STONE = register(new GravityStoneItem());
	public static final Item SPEED_STONE = register(new SpeedStoneItem());
	public static final Item SAND_STONE = register(new SandStoneItem());
	public static final Item SPIRIT_STONE = register(new SpiritStoneItem());
	public static final Item MUSHROOMS_STONE = register(new MushroomsStoneItem());
	public static final Item POINT = register(new PointItem());
	public static final Item MAGNET_STONE = register(new MagnetStoneItem());
	public static final Item MAGNET_HELMET = register(new MagnetItem.Helmet());
	public static final Item MAGNET_CHESTPLATE = register(new MagnetItem.Chestplate());
	public static final Item MAGNET_LEGGINGS = register(new MagnetItem.Leggings());
	public static final Item MAGNET_BOOTS = register(new MagnetItem.Boots());
	public static final Item SPACE_ATLAS = register(new SpaceAtlasItem());
	public static final Item AMBER_SHIELD = register(new AmberShieldItem());
	public static final Item AMBER_BLOCK = register(PowerModBlocks.AMBER_BLOCK, null);
	public static final Item AMBER_STREAKS = register(new AmberStreaksItem());
	public static final Item MIST_HELMET = register(new MistItem.Helmet());
	public static final Item MIST_CHESTPLATE = register(new MistItem.Chestplate());
	public static final Item MIST_LEGGINGS = register(new MistItem.Leggings());
	public static final Item MIST_BOOTS = register(new MistItem.Boots());
	public static final Item MERCURY_STONE = register(new MercuryStoneItem());
	public static final Item GOLDEN_DUST_STONE = register(new GoldenDustStoneItem());
	public static final Item AETHER_STONE = register(new AetherStoneItem());
	public static final Item OBSCURITY = register(new ObscurityItem());
	public static final Item KUNAI = register(new KunaiItem());
	public static final Item MISTY_FAN = register(new MistyFanItem());

	private static Item register(Item item) {
		REGISTRY.add(item);
		return item;
	}

	private static Item register(Block block, CreativeModeTab tab) {
		return register(new BlockItem(block, new Item.Properties().tab(tab)).setRegistryName(block.getRegistryName()));
	}

	@SubscribeEvent
	public static void registerItems(RegistryEvent.Register<Item> event) {
		event.getRegistry().registerAll(REGISTRY.toArray(new Item[0]));
	}
}
